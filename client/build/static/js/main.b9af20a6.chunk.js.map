{"version":3,"sources":["store.js","reducers/productReducers.js","types.js","reducers/cartReducer.js","reducers/orderReducers.js","util.js","actions/cartActions.js","components/Cart.js","actions/orderActions.js","components/Filter.js","actions/productActions.js","components/Products.js","components/Home.js","components/AdminPanel.js","components/ProductModal.js","components/Header.js","components/Footer.js","components/NotFound.js","App.js","index.js"],"names":["composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","products","state","action","type","sort","payload","filteredItems","items","size","modalProduct","cart","cartItems","JSON","parse","localStorage","getItem","order","orders","filter","x","_id","applyMiddleware","thunk","formatCurrency","num","Number","toFixed","toLocaleString","addToCart","product","dispatch","getState","slice","alreadyExists","forEach","count","push","setItem","stringify","Cart","props","handleInput","e","setState","target","name","value","createOrder","preventDefault","email","address","total","reduce","a","c","price","closeModal","clearOrder","showCheckout","this","length","className","isOpen","onRequestClose","onClick","createdAt","map","title","left","cascade","distance","item","key","src","image","alt","removeFromCart","right","onSubmit","required","onChange","Component","connect","fetch","method","headers","body","then","res","json","data","clear","Filter","filteredProducts","sortProducts","filterProducts","availableSizes","indexOf","sortedProducts","b","Products","openModal","history","pushState","fetchProducts","bottom","href","description","withRouter","Home","AdminPanel","fetchOrders","deleteOrder","ProductModal","removeProductFromModal","fetchProduct","match","params","id","React","productId","to","test","location","pathname","Footer","Date","getFullYear","NotFound","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9af20a6.chunk.js","sourcesContent":["import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { cartReducer } from './reducers/cartReducer';\r\nimport { orderReducer } from './reducers/orderReducers';\r\nimport { productsReducer } from './reducers/productReducers';\r\n\r\nconst initialState = {};\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n    combineReducers({\r\n        products: productsReducer,\r\n        cart: cartReducer,\r\n        order: orderReducer\r\n    }),\r\n    initialState,\r\n    composeEnhancer(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n    FETCH_PRODUCT,\r\n    FETCH_PRODUCTS,\r\n    FILTER_PRODUCTS_BY_SIZE,\r\n    ORDER_PRODUCTS_BY_PRICE,\r\n    REMOVE_PRODUCT_FROM_MODAL\r\n} from '../types';\r\n\r\nexport const productsReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case FILTER_PRODUCTS_BY_SIZE:\r\n            return {\r\n                ...state,\r\n                sort: action.payload.sort,\r\n                filteredItems: action.payload.items\r\n            };\r\n        case ORDER_PRODUCTS_BY_PRICE:\r\n            return {\r\n                ...state,\r\n                size: action.payload.size,\r\n                filteredItems: action.payload.items\r\n            };\r\n        case FETCH_PRODUCTS:\r\n            return { items: action.payload, filteredItems: action.payload };\r\n        case FETCH_PRODUCT:\r\n            return { ...state, modalProduct: action.payload };\r\n        case REMOVE_PRODUCT_FROM_MODAL:\r\n            return { ...state, modalProduct: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export const FETCH_PRODUCTS = 'FETCH_PRODUCTS';\r\nexport const FETCH_PRODUCT = 'FETCH_PRODUCT';\r\nexport const REMOVE_PRODUCT_FROM_MODAL = 'REMOVE_PRODUCT_FROM_MODAL';\r\nexport const FILTER_PRODUCTS_BY_SIZE = 'FILTER_PRODUCTS_BY_SIZE';\r\nexport const ORDER_PRODUCTS_BY_PRICE = 'ORDER_PRODUCTS_BY_PRICE';\r\nexport const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\r\nexport const CREATE_ORDER = 'CREATE_ORDER';\r\nexport const CLEAR_ORDER = 'CLEAR_ORDER';\r\nexport const CLEAR_CART = 'CLEAR_CART';\r\nexport const FETCH_ORDERS = 'FETCH_ORDERS';\r\nexport const DELETE_ORDER = 'DELETE_ORDER';\r\n","import { ADD_TO_CART, REMOVE_FROM_CART } from '../types';\r\n\r\nexport const cartReducer = (\r\n    state = {\r\n        cartItems: JSON.parse(localStorage.getItem('cartItems') || '[]')\r\n    },\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case ADD_TO_CART:\r\n            return { cartItems: action.payload.cartItems };\r\n        case REMOVE_FROM_CART:\r\n            return { cartItems: action.payload.cartItems };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {\r\n    CLEAR_ORDER,\r\n    CREATE_ORDER,\r\n    DELETE_ORDER,\r\n    FETCH_ORDERS\r\n} from '../types';\r\n\r\nconst orderReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case CREATE_ORDER:\r\n            return { order: action.payload };\r\n        case CLEAR_ORDER:\r\n            return { order: null };\r\n        case FETCH_ORDERS:\r\n            return { orders: action.payload };\r\n        case DELETE_ORDER:\r\n            return {\r\n                orders: state.orders.filter(x => x._id !== action.payload._id)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport { orderReducer };\r\n","export default function formatCurrency(num) {\r\n    return '$' + Number(num.toFixed(1)).toLocaleString() + ' ';\r\n}\r\n","import { ADD_TO_CART, REMOVE_FROM_CART } from '../types';\r\n\r\nexport const addToCart = product => (dispatch, getState) => {\r\n    const cartItems = getState().cart.cartItems.slice();\r\n    let alreadyExists = false;\r\n    cartItems.forEach(x => {\r\n        if (x._id === product._id) {\r\n            alreadyExists = true;\r\n            x.count++;\r\n        }\r\n    });\r\n\r\n    if (!alreadyExists) {\r\n        cartItems.push({ ...product, count: 1 });\r\n    }\r\n\r\n    dispatch({\r\n        type: ADD_TO_CART,\r\n        payload: { cartItems }\r\n    });\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(cartItems));\r\n};\r\n\r\nexport const removeFromCart = product => (dispatch, getState) => {\r\n    const cartItems = getState()\r\n        .cart.cartItems.slice()\r\n        .filter(x => x._id !== product._id);\r\n\r\n    dispatch({\r\n        type: REMOVE_FROM_CART,\r\n        payload: { cartItems }\r\n    });\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(cartItems));\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport formatCurrency from '../util';\r\nimport Fade from 'react-reveal/Fade';\r\nimport { removeFromCart } from '../actions/cartActions';\r\nimport { createOrder, clearOrder } from '../actions/orderActions';\r\nimport Modal from 'react-modal';\r\nimport Zoom from 'react-reveal/Zoom';\r\n\r\nclass Cart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            address: '',\r\n            showCheckout: false\r\n        };\r\n    }\r\n\r\n    handleInput = e => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n\r\n    createOrder = e => {\r\n        e.preventDefault();\r\n        const order = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            address: this.state.address,\r\n            cartItems: this.props.cartItems,\r\n            total: this.props.cartItems.reduce(\r\n                (a, c) => a + c.price * c.count,\r\n                0\r\n            )\r\n        };\r\n\r\n        this.props.createOrder(order);\r\n    };\r\n\r\n    closeModal = () => {\r\n        this.props.clearOrder();\r\n    };\r\n\r\n    render() {\r\n        const { cartItems, order } = this.props;\r\n        return (\r\n            <div>\r\n                {cartItems.length === 0 ? (\r\n                    <div className=\"cart cart-header\">Cart is empty</div>\r\n                ) : (\r\n                    <div className=\"cart cart-header\">\r\n                        You have {cartItems.length} items in the cart{' '}\r\n                    </div>\r\n                )}\r\n\r\n                {order && (\r\n                    <Modal isOpen={true} onRequestClose={this.closeModal}>\r\n                        <Zoom>\r\n                            <button\r\n                                className=\"close-modal\"\r\n                                onClick={this.closeModal}\r\n                            >\r\n                                x\r\n                            </button>\r\n                            <div className=\"order-details\">\r\n                                <h3 className=\"success-message\">\r\n                                    Your order has been placed.\r\n                                </h3>\r\n                                <h2>Order #{order._id}</h2>\r\n                                <ul>\r\n                                    <li>\r\n                                        <div>Name: </div>\r\n                                        <div>{order.name}</div>\r\n                                    </li>\r\n                                    <li>\r\n                                        <div>Email: </div>\r\n                                        <div>{order.email}</div>\r\n                                    </li>\r\n                                    <li>\r\n                                        <div>Address: </div>\r\n                                        <div>{order.address}</div>\r\n                                    </li>\r\n                                    <li>\r\n                                        <div>Date: </div>\r\n                                        <div>{order.createdAt}</div>\r\n                                    </li>\r\n                                    <li>\r\n                                        <div>Total: </div>\r\n                                        <div>{formatCurrency(order.total)}</div>\r\n                                    </li>\r\n                                    <li>\r\n                                        <div>Cart Items: </div>\r\n                                        <div>\r\n                                            {order.cartItems.map(x => (\r\n                                                <div>\r\n                                                    {x.count} x {x.title}\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </Zoom>\r\n                    </Modal>\r\n                )}\r\n                <div>\r\n                    <div className=\"cart\">\r\n                        <Fade left cascade distance=\"25px\">\r\n                            <ul className=\"cart-items\">\r\n                                {cartItems.map(item => (\r\n                                    <li key={item._id}>\r\n                                        <div>\r\n                                            <img\r\n                                                src={item.image}\r\n                                                alt={item.title}\r\n                                            />\r\n                                        </div>\r\n                                        <div>\r\n                                            <div>\r\n                                                <div>{item.title}</div>\r\n                                                <div className=\"right\">\r\n                                                    {formatCurrency(item.price)}{' '}\r\n                                                    x {item.count}{' '}\r\n                                                    <button\r\n                                                        className=\"button\"\r\n                                                        onClick={() =>\r\n                                                            this.props.removeFromCart(\r\n                                                                item\r\n                                                            )\r\n                                                        }\r\n                                                    >\r\n                                                        Remove\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        </Fade>\r\n                    </div>\r\n                    {cartItems.length !== 0 && (\r\n                        <div>\r\n                            <div className=\"cart\">\r\n                                <div className=\"total\">\r\n                                    <div>\r\n                                        Total:{' '}\r\n                                        {formatCurrency(\r\n                                            cartItems.reduce(\r\n                                                (a, c) => a + c.price * c.count,\r\n                                                0\r\n                                            )\r\n                                        )}\r\n                                    </div>\r\n                                    <button\r\n                                        onClick={() =>\r\n                                            this.setState({\r\n                                                showCheckout: true\r\n                                            })\r\n                                        }\r\n                                        className=\"button primary\"\r\n                                    >\r\n                                        Proceed\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            {this.state.showCheckout && (\r\n                                <Fade right cascade>\r\n                                    <div className=\"cart\">\r\n                                        <form onSubmit={this.createOrder}>\r\n                                            <ul className=\"form-container\">\r\n                                                <li>\r\n                                                    <label>Email</label>\r\n                                                    <input\r\n                                                        name=\"email\"\r\n                                                        type=\"email\"\r\n                                                        required\r\n                                                        onChange={\r\n                                                            this.handleInput\r\n                                                        }\r\n                                                    />\r\n                                                </li>\r\n                                                <li>\r\n                                                    <label>Name</label>\r\n                                                    <input\r\n                                                        name=\"name\"\r\n                                                        type=\"text\"\r\n                                                        required\r\n                                                        onChange={\r\n                                                            this.handleInput\r\n                                                        }\r\n                                                    />\r\n                                                </li>\r\n                                                <li>\r\n                                                    <label>Address</label>\r\n                                                    <input\r\n                                                        name=\"address\"\r\n                                                        type=\"text\"\r\n                                                        required\r\n                                                        onChange={\r\n                                                            this.handleInput\r\n                                                        }\r\n                                                    />\r\n                                                </li>\r\n                                                <li>\r\n                                                    <button\r\n                                                        className=\"button primary\"\r\n                                                        type=\"submit\"\r\n                                                    >\r\n                                                        Checkout\r\n                                                    </button>\r\n                                                </li>\r\n                                            </ul>\r\n                                        </form>\r\n                                    </div>\r\n                                </Fade>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        order: state.order.order,\r\n        cartItems: state.cart.cartItems\r\n    }),\r\n    { removeFromCart, createOrder, clearOrder }\r\n)(Cart);\r\n","import {\r\n    CLEAR_CART,\r\n    CLEAR_ORDER,\r\n    CREATE_ORDER,\r\n    DELETE_ORDER,\r\n    FETCH_ORDERS\r\n} from '../types';\r\n\r\nexport const createOrder = order => dispatch => {\r\n    fetch('/api/orders', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(order)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            dispatch({ type: CREATE_ORDER, payload: data });\r\n            localStorage.clear('cartItems');\r\n            dispatch({ type: CLEAR_CART });\r\n        });\r\n};\r\n\r\nexport const clearOrder = () => dispatch => {\r\n    dispatch({ type: CLEAR_ORDER });\r\n};\r\n\r\nexport const fetchOrders = () => async dispatch => {\r\n    const res = await fetch('/api/orders');\r\n    const data = await res.json();\r\n    dispatch({\r\n        type: FETCH_ORDERS,\r\n        payload: data\r\n    });\r\n};\r\n\r\nexport const deleteOrder = order => async dispatch => {\r\n    fetch(`/api/order/${order._id}`, {\r\n        method: 'DELETE'\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            dispatch({\r\n                type: DELETE_ORDER,\r\n                payload: data\r\n            });\r\n        });\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { filterProducts, sortProducts } from '../actions/productActions';\r\n\r\nclass Filter extends Component {\r\n    render() {\r\n        return !this.props.filteredProducts ? (\r\n            <div>Loading...</div>\r\n        ) : (\r\n            <div className=\"filter\">\r\n                <div className=\"filter-result\">\r\n                    {this.props.filteredProducts.length} Products{' '}\r\n                </div>\r\n                <div className=\"filter-sort\">\r\n                    Order{' '}\r\n                    <select\r\n                        value={this.props.sort}\r\n                        onChange={e =>\r\n                            this.props.sortProducts(\r\n                                this.props.products,\r\n                                e.target.value\r\n                            )\r\n                        }\r\n                    >\r\n                        <option value=\"latest\">Latest</option>\r\n                        <option value=\"lowest\">Lowest</option>\r\n                        <option value=\"highest\">Highest</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"filter-size\">\r\n                    Filter{' '}\r\n                    <select\r\n                        value={this.props.size}\r\n                        onChange={e =>\r\n                            this.props.filterProducts(\r\n                                this.props.products,\r\n                                e.target.value\r\n                            )\r\n                        }\r\n                    >\r\n                        <option value=\"\">ALL</option>\r\n                        <option value=\"XS\">XS</option>\r\n                        <option value=\"S\">S</option>\r\n                        <option value=\"M\">M</option>\r\n                        <option value=\"L\">L</option>\r\n                        <option value=\"XL\">XL</option>\r\n                        <option value=\"XXL\">XXL</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        size: state.products.size,\r\n        sort: state.products.sort,\r\n        products: state.products.items,\r\n        filteredProducts: state.products.filteredItems\r\n    }),\r\n    {\r\n        filterProducts,\r\n        sortProducts\r\n    }\r\n)(Filter);\r\n","import {\r\n    FETCH_PRODUCTS,\r\n    ORDER_PRODUCTS_BY_PRICE,\r\n    FILTER_PRODUCTS_BY_SIZE,\r\n    FETCH_PRODUCT,\r\n    REMOVE_PRODUCT_FROM_MODAL\r\n} from '../types';\r\n\r\nexport const fetchProducts = () => async dispatch => {\r\n    const res = await fetch('/api/products');\r\n    const data = await res.json();\r\n    dispatch({\r\n        type: FETCH_PRODUCTS,\r\n        payload: data\r\n    });\r\n};\r\n\r\nexport const fetchProduct = productId => async dispatch => {\r\n    const res = await fetch('/api/product/' + productId);\r\n    const data = await res.json();\r\n    dispatch({\r\n        type: FETCH_PRODUCT,\r\n        payload: data\r\n    });\r\n};\r\n\r\nexport const removeProductFromModal = () => dispatch => {\r\n    dispatch({\r\n        type: REMOVE_PRODUCT_FROM_MODAL,\r\n        payload: null\r\n    });\r\n};\r\n\r\nexport const filterProducts = (products, size) => dispatch => {\r\n    dispatch({\r\n        type: FILTER_PRODUCTS_BY_SIZE,\r\n        payload: {\r\n            size,\r\n            items:\r\n                size === ''\r\n                    ? products\r\n                    : products.filter(x => x.availableSizes.indexOf(size) >= 0)\r\n        }\r\n    });\r\n};\r\n\r\nexport const sortProducts = (filteredProducts, sort) => dispatch => {\r\n    const sortedProducts = filteredProducts.slice();\r\n\r\n    if (sort === 'latest') {\r\n        sortedProducts.sort((a, b) => (a._id > b._id ? 1 : -1));\r\n    } else {\r\n        sortedProducts.sort((a, b) =>\r\n            sort === 'lowest'\r\n                ? a.price > b.price\r\n                    ? 1\r\n                    : -1\r\n                : a.price > b.price\r\n                ? -1\r\n                : 1\r\n        );\r\n    }\r\n\r\n    dispatch({\r\n        type: ORDER_PRODUCTS_BY_PRICE,\r\n        payload: {\r\n            sort,\r\n            items: sortedProducts\r\n        }\r\n    });\r\n};\r\n","import React, { Component } from 'react';\r\nimport formatCurrency from '../util';\r\nimport Fade from 'react-reveal/Fade';\r\nimport Zoom from 'react-reveal/Zoom';\r\nimport Modal from 'react-modal';\r\nimport { connect } from 'react-redux';\r\nimport { fetchProducts } from '../actions/productActions';\r\nimport { addToCart } from '../actions/cartActions';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Products extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            product: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchProducts();\r\n    }\r\n\r\n    openModal = (e, product) => {\r\n        e.preventDefault();\r\n\r\n        this.setState({ product });\r\n        window.history.pushState(\r\n            {},\r\n            'URL Rewrite Example',\r\n            `/product/${product._id}`\r\n        );\r\n    };\r\n\r\n    closeModal = () => {\r\n        this.setState({ product: null });\r\n        window.history.pushState({}, 'URL Rewrite', `/`);\r\n    };\r\n\r\n    render() {\r\n        const { product } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <Fade bottom cascade>\r\n                    {!this.props.products ? (\r\n                        <div>Loading...</div>\r\n                    ) : (\r\n                        <ul className=\"products\">\r\n                            {this.props.products.map(product => (\r\n                                <li key={product._id}>\r\n                                    <div className=\"product\">\r\n                                        <a\r\n                                            href={'/product/' + product._id}\r\n                                            onClick={e =>\r\n                                                this.openModal(e, product)\r\n                                            }\r\n                                        >\r\n                                            <img\r\n                                                src={product.image}\r\n                                                alt={product.title}\r\n                                            />\r\n                                            <p>{product.title}</p>\r\n                                        </a>\r\n                                        <div className=\"product-price\">\r\n                                            <div>\r\n                                                {formatCurrency(product.price)}\r\n                                            </div>\r\n                                            <button\r\n                                                onClick={() =>\r\n                                                    this.props.addToCart(\r\n                                                        product\r\n                                                    )\r\n                                                }\r\n                                                className=\"button primary\"\r\n                                            >\r\n                                                Add to Cart\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    )}\r\n                </Fade>\r\n                {product && (\r\n                    <Modal isOpen={true} onRequestClose={this.closeModal}>\r\n                        <Zoom>\r\n                            <button\r\n                                className=\"close-modal\"\r\n                                onClick={this.closeModal}\r\n                            >\r\n                                x\r\n                            </button>\r\n                            <div className=\"product-details\">\r\n                                <img src={product.image} alt={product.title} />\r\n                                <div className=\"product-details-description\">\r\n                                    <p>\r\n                                        <strong>{product.title}</strong>\r\n                                    </p>\r\n                                    <p>{product.description}</p>\r\n                                    <p>\r\n                                        Available Sizes\r\n                                        {product.availableSizes.map(x => (\r\n                                            <span>\r\n                                                {' '}\r\n                                                <button className=\"button\">\r\n                                                    {x}\r\n                                                </button>\r\n                                            </span>\r\n                                        ))}\r\n                                    </p>\r\n                                    <div className=\"product-price\">\r\n                                        <div>\r\n                                            {formatCurrency(product.price)}\r\n                                        </div>\r\n                                        <button\r\n                                            className=\"button primary\"\r\n                                            onClick={() => {\r\n                                                this.props.addToCart(product);\r\n                                                this.closeModal();\r\n                                            }}\r\n                                        >\r\n                                            Add To Cart\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Zoom>\r\n                    </Modal>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(state => ({ products: state.products.filteredItems }), {\r\n    fetchProducts,\r\n    addToCart\r\n})(withRouter(Products));\r\n","import React from 'react';\r\nimport Cart from './Cart';\r\nimport Filter from './Filter';\r\nimport Products from './Products';\r\n\r\nexport default function Home() {\r\n    return (\r\n        <main>\r\n            <div className=\"content\">\r\n                <div className=\"main\">\r\n                    <Filter />\r\n                    <Products />\r\n                </div>\r\n                <div className=\"sidebar\">\r\n                    <Cart />\r\n                </div>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchOrders, deleteOrder } from '../actions/orderActions';\r\nimport formatCurrency from '../util';\r\nimport Slide from 'react-reveal/Slide';\r\n\r\nclass AdminPanel extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchOrders();\r\n    }\r\n\r\n    render() {\r\n        return this.props.orders ? (\r\n            <div>\r\n                <div>\r\n                    <h1 className=\"orders-title\">Orders</h1>\r\n                    <ul className=\"orders\">\r\n                        {this.props.orders.map(order => (\r\n                            <Slide left>\r\n                                <li key={order._id} className=\"order-group\">\r\n                                    <div>\r\n                                        <strong>Order Number:</strong> #\r\n                                        {order._id}\r\n                                    </div>\r\n                                    <div>\r\n                                        <strong>Name: </strong>\r\n                                        {order.name}\r\n                                    </div>\r\n                                    <div>\r\n                                        <strong>Email: </strong>\r\n                                        {order.email}\r\n                                    </div>\r\n                                    <div>\r\n                                        <strong>Address: </strong>\r\n                                        {order.address}\r\n                                    </div>\r\n                                    <div>\r\n                                        <strong>Total: </strong>\r\n                                        {formatCurrency(order.total)}\r\n                                    </div>\r\n                                    <div>\r\n                                        <strong>Items: </strong>\r\n                                        <ol>\r\n                                            {order.cartItems.map(item => (\r\n                                                <li key={item._id}>\r\n                                                    {item.title}\r\n                                                    {'  '}\r\n                                                    {formatCurrency(item.price)}\r\n                                                    x{item.count}\r\n                                                </li>\r\n                                            ))}\r\n                                        </ol>\r\n                                    </div>\r\n                                    <button\r\n                                        className=\"button danger\"\r\n                                        onClick={() =>\r\n                                            this.props.deleteOrder(order)\r\n                                        }\r\n                                    >\r\n                                        Delete Order\r\n                                    </button>\r\n                                </li>\r\n                            </Slide>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        ) : (\r\n            <div>Loading...</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        orders: state.order.orders\r\n    }),\r\n    {\r\n        fetchOrders,\r\n        deleteOrder\r\n    }\r\n)(AdminPanel);\r\n","import React from 'react';\r\nimport Zoom from 'react-reveal/Zoom';\r\nimport Modal from 'react-modal';\r\nimport formatCurrency from '../util';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { addToCart } from '../actions/cartActions';\r\nimport { fetchProduct } from '../actions/productActions';\r\nimport { removeProductFromModal } from '../actions/productActions';\r\nimport { connect } from 'react-redux';\r\nimport Home from './Home';\r\n\r\nclass ProductModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            product: this.props.modalProduct\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchProduct(this.props.match.params.id);\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.props.removeProductFromModal();\r\n        this.setState({ product: null });\r\n        window.history.pushState({}, 'URL Rewrite', `/`);\r\n    };\r\n\r\n    render() {\r\n        const product = this.props.modalProduct;\r\n\r\n        return (\r\n            <div>\r\n                <Home />\r\n                {product ? (\r\n                    <div>\r\n                        <Modal isOpen={true} onRequestClose={this.closeModal}>\r\n                            <Zoom>\r\n                                <button\r\n                                    className=\"close-modal\"\r\n                                    onClick={this.closeModal}\r\n                                >\r\n                                    x\r\n                                </button>\r\n                                <div className=\"product-details\">\r\n                                    <img\r\n                                        src={product.image}\r\n                                        alt={product.title}\r\n                                    />\r\n                                    <div className=\"product-details-description\">\r\n                                        <p>\r\n                                            <strong>{product.title}</strong>\r\n                                        </p>\r\n                                        <p>{product.description}</p>\r\n                                        <p>\r\n                                            Available Sizes\r\n                                            {product.availableSizes.map(x => (\r\n                                                <span>\r\n                                                    {' '}\r\n                                                    <button className=\"button\">\r\n                                                        {x}\r\n                                                    </button>\r\n                                                </span>\r\n                                            ))}\r\n                                        </p>\r\n                                        <div className=\"product-price\">\r\n                                            <div>\r\n                                                {formatCurrency(product.price)}\r\n                                            </div>\r\n                                            <button\r\n                                                className=\"button primary\"\r\n                                                onClick={() => {\r\n                                                    this.props.addToCart(\r\n                                                        product\r\n                                                    );\r\n                                                    this.closeModal();\r\n                                                }}\r\n                                            >\r\n                                                Add To Cart\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Zoom>\r\n                        </Modal>\r\n                    </div>\r\n                ) : (\r\n                    <div>Loading...</div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({ modalProduct: state.products.modalProduct }),\r\n    {\r\n        fetchProduct,\r\n        addToCart,\r\n        removeProductFromModal\r\n    }\r\n)(withRouter(ProductModal));\r\n","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <div>\r\n            <header>\r\n                <Link\r\n                    className=\"logo\"\r\n                    to=\"/\"\r\n                    onClick={e =>\r\n                        /^\\/product\\/.+$/.test(props.history.location.pathname)\r\n                            ? e.preventDefault()\r\n                            : true\r\n                    }\r\n                >\r\n                    MILD STORE\r\n                </Link>\r\n                <Link className=\"admin-link\" to=\"/admin\">\r\n                    Admin Panel\r\n                </Link>\r\n            </header>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import React from 'react';\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer>&copy; {new Date().getFullYear()} All rights reserved.</footer>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div className=\"not-found\">\r\n            <h1 className=\"not-found-message\">\r\n                Sorry, this page can't be found!\r\n            </h1>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport store from './store';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Home from './components/Home';\r\nimport AdminPanel from './components/AdminPanel';\r\nimport ProductModal from './components/ProductModal';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport NotFound from './components/NotFound';\r\n\r\nclass App extends React.Component {\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n                <Provider store={store}>\r\n                    <div className=\"grid-container\">\r\n                        <Header />\r\n                        <Switch>\r\n                            <Route path=\"/\" exact component={Home} />\r\n                            <Route path=\"/admin\" component={AdminPanel} />\r\n                            <Route\r\n                                path=\"/product/:id\"\r\n                                component={ProductModal}\r\n                            />\r\n                            <Route component={NotFound} />\r\n                        </Switch>\r\n                        <Footer />\r\n                    </div>\r\n                </Provider>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}